#include <Keyboard.h>
KeyReport _keyReport;

//Pin Setting
const byte Pin_X[12] = {2, 3, 4, 5, 6, 7, 8, 9, 15, 14, 16, 10};
const byte Pin_Y[4] = {21, 20, 19, 18};
const int DT = 50;
int FN = 0;

//Matrix Setting
uint8_t KeySet[2][4][12] =
{
  {
    {0xB1, 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 0xB2},
    {0xB3, 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', 0xB0},
    {0x81, 'z', 'x', 'c', 'v', 'b', 'n', 'm', 0xBC, 0xBE, 0xBF, 0x85},
    {0x80, 0x83, 0x82, 0x85, 0x20, 0x20, 0x20, 0x86, 0xD8, 0xD9, 0xDA, 0xD7}
  },
  {
    {0xC0, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD},
    {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '='},
    {0x81, 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', 0x85},
    {0x80, 0x83, 0x82, 0x85, 0x20, 0x20, 0x20, 0x86, 0xD8, 0xD9, 0xDA, 0xD7}
  }
};


void setup()
{
  Serial.begin(9600);
  Keyboard.begin();
  for (int Iy = 0 ; Iy < 4 ; Iy++ )
  {
    pinMode(Pin_Y[Iy], OUTPUT);
  }
  for (int Ix = 0 ; Ix < 12 ; Ix++ )
  {
    pinMode(Pin_X[Ix], INPUT_PULLUP);
  }
  RXLED0;  //Turn Off On Board LED
  TXLED0;
}


void loop() 
{
  //Check Function Key to Swap Palette
  digitalWrite(Pin_Y[3], LOW);
  if (!digitalRead(Pin_X[3])) FN = 1;
  else if (digitalRead(Pin_X[3])) FN = 0;
  digitalWrite(Pin_Y[3], HIGH);

  //Check Key Matrix
  for (int Kx = 0; Kx < 12; Kx++)
  {
    for (int Ky = 0; Ky < 4; Ky++)
    {
      digitalWrite(Pin_Y[Ky], LOW);
      if (!digitalRead(Pin_X[Kx]))
      {
        _keyReport = _keyReport = Keyboard.press_key(_keyReport, KeySet[FN][Ky][Kx]);
      }
      else if (digitalRead(Pin_X[Kx]))
      {
        _keyReport = _keyReport = Keyboard.release_key(_keyReport, KeySet[FN][Ky][Kx]);
      }
      digitalWrite(Pin_Y[Ky], HIGH);
    }
  }
  Keyboard.sendReport(&_keyReport);
  //delay(DT);
}
